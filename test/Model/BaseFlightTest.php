<?php
/**
 * BaseFlightTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  FlightAware\PHPClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * AeroAPI
 *
 * # Introduction AeroAPI is a simple, query-based API that gives software developers access to a variety of FlightAware's flight data. Users can obtain current or historical data. AeroAPI is a RESTful API delivering accurate and actionable aviation data. With the introduction of Foresight™, customers have access to the data that powers over half of the predictive airline ETAs in the US.  ## Categories AeroAPI is divided into several categories to make things easier to discover. - Flights: Summary information, planned routes, positions and more - Foresight: Flight positions enhanced with FlightAware Foresight™ - Airports: Airport information and FIDS style resources - Operators: Operator information and fleet activity resources - Alerts: Configure flight alerts and delivery destinations - History: Historical flight access for various endpoints - Miscellaneous: Flight disruption, future schedule information, and aircraft owner information  ## Development Tools AeroAPI is defined using the OpenAPI Spec 3.0, which means it can be easily imported into tools like Postman. To get started try importing the API specification using [Postman's instructions](https://learning.postman.com/docs/integrations/available-integrations/working-with-openAPI/). Once imported as a collection only the \"Value\" field under the collection's Authorization tab needs to be populated and saved before making calls.  The AeroAPI OpenAPI specification is located at:\\ https://flightaware.com/commercial/aeroapi/resources/aeroapi-openapi.yml  Our [open source AeroApps project](/aeroapi/portal/resources) provides a small collection of services and sample applications to help you get started.  The Flight Information Display System (FIDS) AeroApp is an example of a multi-tier application using multiple languages and Docker containers. It demonstrates connectivity, data caching, flight presentation, and leveraging flight maps.  The Alerts AeroApp demonstrates the use of AeroAPI to set, edit, and receive alerts in a sample application with a Dockerized Python backend and a React frontend.  Our AeroAPI push notification [testing interface](/commercial/aeroapi/send.rvt) provides a quick and easy way to test the delivery of customized alerts via AeroAPI push.
 *
 * OpenAPI spec version: 4.12
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.42
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace FlightAware\PHPClient;

use PHPUnit\Framework\TestCase;

/**
 * BaseFlightTest Class Doc Comment
 *
 * @category    Class
 * @description BaseFlight
 * @package     FlightAware\PHPClient
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class BaseFlightTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "BaseFlight"
     */
    public function testBaseFlight()
    {
    }

    /**
     * Test attribute "ident"
     */
    public function testPropertyIdent()
    {
    }

    /**
     * Test attribute "ident_icao"
     */
    public function testPropertyIdentIcao()
    {
    }

    /**
     * Test attribute "ident_iata"
     */
    public function testPropertyIdentIata()
    {
    }

    /**
     * Test attribute "fa_flight_id"
     */
    public function testPropertyFaFlightId()
    {
    }

    /**
     * Test attribute "operator"
     */
    public function testPropertyOperator()
    {
    }

    /**
     * Test attribute "operator_icao"
     */
    public function testPropertyOperatorIcao()
    {
    }

    /**
     * Test attribute "operator_iata"
     */
    public function testPropertyOperatorIata()
    {
    }

    /**
     * Test attribute "flight_number"
     */
    public function testPropertyFlightNumber()
    {
    }

    /**
     * Test attribute "registration"
     */
    public function testPropertyRegistration()
    {
    }

    /**
     * Test attribute "atc_ident"
     */
    public function testPropertyAtcIdent()
    {
    }

    /**
     * Test attribute "inbound_fa_flight_id"
     */
    public function testPropertyInboundFaFlightId()
    {
    }

    /**
     * Test attribute "codeshares"
     */
    public function testPropertyCodeshares()
    {
    }

    /**
     * Test attribute "codeshares_iata"
     */
    public function testPropertyCodesharesIata()
    {
    }

    /**
     * Test attribute "blocked"
     */
    public function testPropertyBlocked()
    {
    }

    /**
     * Test attribute "diverted"
     */
    public function testPropertyDiverted()
    {
    }

    /**
     * Test attribute "cancelled"
     */
    public function testPropertyCancelled()
    {
    }

    /**
     * Test attribute "position_only"
     */
    public function testPropertyPositionOnly()
    {
    }

    /**
     * Test attribute "origin"
     */
    public function testPropertyOrigin()
    {
    }

    /**
     * Test attribute "destination"
     */
    public function testPropertyDestination()
    {
    }

    /**
     * Test attribute "departure_delay"
     */
    public function testPropertyDepartureDelay()
    {
    }

    /**
     * Test attribute "arrival_delay"
     */
    public function testPropertyArrivalDelay()
    {
    }

    /**
     * Test attribute "filed_ete"
     */
    public function testPropertyFiledEte()
    {
    }

    /**
     * Test attribute "progress_percent"
     */
    public function testPropertyProgressPercent()
    {
    }

    /**
     * Test attribute "status"
     */
    public function testPropertyStatus()
    {
    }

    /**
     * Test attribute "aircraft_type"
     */
    public function testPropertyAircraftType()
    {
    }

    /**
     * Test attribute "route_distance"
     */
    public function testPropertyRouteDistance()
    {
    }

    /**
     * Test attribute "filed_airspeed"
     */
    public function testPropertyFiledAirspeed()
    {
    }

    /**
     * Test attribute "filed_altitude"
     */
    public function testPropertyFiledAltitude()
    {
    }

    /**
     * Test attribute "route"
     */
    public function testPropertyRoute()
    {
    }

    /**
     * Test attribute "baggage_claim"
     */
    public function testPropertyBaggageClaim()
    {
    }

    /**
     * Test attribute "seats_cabin_business"
     */
    public function testPropertySeatsCabinBusiness()
    {
    }

    /**
     * Test attribute "seats_cabin_coach"
     */
    public function testPropertySeatsCabinCoach()
    {
    }

    /**
     * Test attribute "seats_cabin_first"
     */
    public function testPropertySeatsCabinFirst()
    {
    }

    /**
     * Test attribute "gate_origin"
     */
    public function testPropertyGateOrigin()
    {
    }

    /**
     * Test attribute "gate_destination"
     */
    public function testPropertyGateDestination()
    {
    }

    /**
     * Test attribute "terminal_origin"
     */
    public function testPropertyTerminalOrigin()
    {
    }

    /**
     * Test attribute "terminal_destination"
     */
    public function testPropertyTerminalDestination()
    {
    }

    /**
     * Test attribute "type"
     */
    public function testPropertyType()
    {
    }

    /**
     * Test attribute "scheduled_out"
     */
    public function testPropertyScheduledOut()
    {
    }

    /**
     * Test attribute "estimated_out"
     */
    public function testPropertyEstimatedOut()
    {
    }

    /**
     * Test attribute "actual_out"
     */
    public function testPropertyActualOut()
    {
    }

    /**
     * Test attribute "scheduled_off"
     */
    public function testPropertyScheduledOff()
    {
    }

    /**
     * Test attribute "estimated_off"
     */
    public function testPropertyEstimatedOff()
    {
    }

    /**
     * Test attribute "actual_off"
     */
    public function testPropertyActualOff()
    {
    }

    /**
     * Test attribute "scheduled_on"
     */
    public function testPropertyScheduledOn()
    {
    }

    /**
     * Test attribute "estimated_on"
     */
    public function testPropertyEstimatedOn()
    {
    }

    /**
     * Test attribute "actual_on"
     */
    public function testPropertyActualOn()
    {
    }

    /**
     * Test attribute "scheduled_in"
     */
    public function testPropertyScheduledIn()
    {
    }

    /**
     * Test attribute "estimated_in"
     */
    public function testPropertyEstimatedIn()
    {
    }

    /**
     * Test attribute "actual_in"
     */
    public function testPropertyActualIn()
    {
    }
}
