<?php
/**
 * AirportsApiTest
 * PHP version 5
 *
 * @category Class
 * @package  FlightAware\PHPClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * AeroAPI
 *
 * # Introduction AeroAPI is a simple, query-based API that gives software developers access to a variety of FlightAware's flight data. Users can obtain current or historical data. AeroAPI is a RESTful API delivering accurate and actionable aviation data. With the introduction of Foresight™, customers have access to the data that powers over half of the predictive airline ETAs in the US.  ## Categories AeroAPI is divided into several categories to make things easier to discover. - Flights: Summary information, planned routes, positions and more - Foresight: Flight positions enhanced with FlightAware Foresight™ - Airports: Airport information and FIDS style resources - Operators: Operator information and fleet activity resources - Alerts: Configure flight alerts and delivery destinations - History: Historical flight access for various endpoints - Miscellaneous: Flight disruption, future schedule information, and aircraft owner information  ## Development Tools AeroAPI is defined using the OpenAPI Spec 3.0, which means it can be easily imported into tools like Postman. To get started try importing the API specification using [Postman's instructions](https://learning.postman.com/docs/integrations/available-integrations/working-with-openAPI/). Once imported as a collection only the \"Value\" field under the collection's Authorization tab needs to be populated and saved before making calls.  The AeroAPI OpenAPI specification is located at:\\ https://flightaware.com/commercial/aeroapi/resources/aeroapi-openapi.yml  Our [open source AeroApps project](/aeroapi/portal/resources) provides a small collection of services and sample applications to help you get started.  The Flight Information Display System (FIDS) AeroApp is an example of a multi-tier application using multiple languages and Docker containers. It demonstrates connectivity, data caching, flight presentation, and leveraging flight maps.  The Alerts AeroApp demonstrates the use of AeroAPI to set, edit, and receive alerts in a sample application with a Dockerized Python backend and a React frontend.  Our AeroAPI push notification [testing interface](/commercial/aeroapi/send.rvt) provides a quick and easy way to test the delivery of customized alerts via AeroAPI push.
 *
 * OpenAPI spec version: 4.12
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.42
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace FlightAware\PHPClient;

use FlightAware\PHPClient\Configuration;
use FlightAware\PHPClient\ApiException;
use FlightAware\PHPClient\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * AirportsApiTest Class Doc Comment
 *
 * @category Class
 * @package  FlightAware\PHPClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AirportsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for getAirport
     *
     * Get static information about an airport.
     *
     */
    public function testGetAirport()
    {
    }

    /**
     * Test case for getAirportDelays
     *
     * Get airport delay information.
     *
     */
    public function testGetAirportDelays()
    {
    }

    /**
     * Test case for getAirportFlights
     *
     * Get all flights for a given airport.
     *
     */
    public function testGetAirportFlights()
    {
    }

    /**
     * Test case for getAirportFlightsArrived
     *
     * Get flights that have recently arrived at an airport.
     *
     */
    public function testGetAirportFlightsArrived()
    {
    }

    /**
     * Test case for getAirportFlightsCount
     *
     * Get flight counts for an airport.
     *
     */
    public function testGetAirportFlightsCount()
    {
    }

    /**
     * Test case for getAirportFlightsDeparted
     *
     * Get flights that have recently departed from an airport.
     *
     */
    public function testGetAirportFlightsDeparted()
    {
    }

    /**
     * Test case for getAirportFlightsScheduledArrivals
     *
     * Get future flights arriving at an airport.
     *
     */
    public function testGetAirportFlightsScheduledArrivals()
    {
    }

    /**
     * Test case for getAirportFlightsScheduledDepartures
     *
     * Get future flights departing from an airport.
     *
     */
    public function testGetAirportFlightsScheduledDepartures()
    {
    }

    /**
     * Test case for getAirportWeatherForecast
     *
     * Get weather forecast for given airport.
     *
     */
    public function testGetAirportWeatherForecast()
    {
    }

    /**
     * Test case for getAirportWeatherObservations
     *
     * Get weather conditions for given airport.
     *
     */
    public function testGetAirportWeatherObservations()
    {
    }

    /**
     * Test case for getAirportsCanonical
     *
     * Get the canonical code of an airport.
     *
     */
    public function testGetAirportsCanonical()
    {
    }

    /**
     * Test case for getAirportsNearAirport
     *
     * Get airports near an airport.
     *
     */
    public function testGetAirportsNearAirport()
    {
    }

    /**
     * Test case for getAllAirports
     *
     * Get all airports.
     *
     */
    public function testGetAllAirports()
    {
    }

    /**
     * Test case for getDelaysForAllAirports
     *
     * Get delay information for all airports with delays.
     *
     */
    public function testGetDelaysForAllAirports()
    {
    }

    /**
     * Test case for getFlightsBetweenAirports
     *
     * Get flights with a specific origin and destination.
     *
     */
    public function testGetFlightsBetweenAirports()
    {
    }

    /**
     * Test case for getNearbyAirports
     *
     * Get airports near a location.
     *
     */
    public function testGetNearbyAirports()
    {
    }

    /**
     * Test case for getRoutesBetweenAirports
     *
     * Get routes between 2 airports.
     *
     */
    public function testGetRoutesBetweenAirports()
    {
    }
}
